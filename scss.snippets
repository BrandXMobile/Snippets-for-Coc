# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet media "media query" 
@media screen and (min-width:${1}) {

}
endsnippet

snippet transition "animation" b
    transition: [transition-property] [transition-duration] [transition-timing-function] [transition-delay];
endsnippet

snippet comment-multiline "multiline comment" b
/*
${1}
*/

endsnippet

snippet list-with-icons "generate a list with icons object mapping" b

  .list-with-icons {
    @include list-reset();
  }

$icon-map: (
  connectors: "images/icon-connectors.svg",
  magnify: "images/icon-magnify.svg",
  obtaining: "images/icon-obtaining.svg",
  software: "images/icon-software.svg",
  download: "images/icon-download.svg",
  understanding: "images/icon-understanding.svg",
  tick: "images/icon-tick.svg",
  split: "images/icon-split.svg",
  automated: "images/icon-automated.svg",
  germany: "images/icon-germany.svg",
);

@each $name, $visual in $icon-map {
  .icon-#{$name} {
    display: flex;
    align-items: center;
    padding-bottom: 1rem;
    &:before {
      width: 32px;
      height: 32px;
      display: inline-block;
      background-image: url($visual);
      background-repeat: no-repeat;
      content: ' ';
      padding-right: 50px;
    }

    &::marker {
      display: none;
    }
  }
}


endsnippet

snippet grid "complex grid example - assign the grid areas" b
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr;
      grid-template-rows: 1fr;
      grid-template-areas: 
      'post post post post'; 
endsnippet

snippet interpolate "responsive elements" b
    @include interpolate(font-size, 1280px, 1920px, 14px, 16px );
endsnippet

snippet comment-singleline "single line comment" b
/*--------------------------------------------------------------
## Comments
--------------------------------------------------------------*/
endsnippet

snippet map-get "get value from object 1: key, 2: value" b
map-get(${1}, ${2});
endsnippet

snippet section "section scaffold" 
.${1} {
	.container {}
	&__wrapper {}
	&__title {}
	&__text {}
}
endsnippet

snippet nim-block-scaffold "nimblex scaffold for block" b

.${1} {
  > .wp-block-group__inner-container {
    @extend .container;
  }
  &__title {
    @include title($medium:true);
  }
  &__text {
    @include text($medium: true);
  }
}

endsnippet

snippet font-load "Description" b

@font-face {
  font-family: '${1}';
  src:  url('${1}.woff2') format('woff2'),
        url('${1}.woff') format('woff');
}

endsnippet

snippet fluid-imgs-mixin "mixin for fluid imgs" 
@mixin fluid-imgs() {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
}
endsnippet

snippet fluid-imgs "css for fluid imgs" 
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
endsnippet
